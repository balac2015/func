'use strict';

interface RegexpSet {
    [index: string]: RegExp
}

const regexp: RegexpSet = {
    // 校验名称
    account: /^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/,

    // 校验IP
    ip: /^((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))$/,
    // 校验端口
    port: /^([0-9]|[1-9]\d{1,3}|[1-5]\d{4}|6[0-4]\d{4}|65[0-4]\d{2}|655[0-2]\d|6553[0-5])$/,
    // 校验MAC地址，以xx-xx-xx-xx-xx-xx的形式（xx为16进制数字）
    mac: /^([0-9A-Fa-f]{2}[-]){5}([0-9A-Fa-f]{2})$/,
    // 链接格式
    url: /(^#)|(^http(s*):\/\/[^\s]+\.[^\s]+)/,

    // 校验手机号码
    mobilePhone: /^[1][3-9]\d{9}$/,
    mobilePhone2: /^1\d{10}$/,
    // 中国三大运营商的电话号码
    mobilePhone3: /^((86)?(13[0-9]|15[0-3,5-9]|18[0-9]|19[89]|17[0135678]|166|14[579])\d{8})$/,
    // 校验固定电话号码
    phone: /^0\d{2,3}-\d{7,8}$/,

    // 校验邮箱
    email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
    email2: /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,

    // 校验居民身份证号
    residentID: /^\d{17}[\dxX]$|^\d{15}$/,
    // 校验居民身份证号
    identity: /(^\d{15}$)|(^\d{17}(x|X|\d)$)/,
    identity3: /^([1-9]\d{5}[12][0-9]{3}[01][0-9][0-3][0-9]\d{3}[0-9X])$/,

    // 校验整数
    integer: /^((-?[1-9]\d*)|0)$/,
    // 校验正整数
    integerP: /^[1-9]\d*$/,
    // 校验负整数
    integerN: /^-[1-9]\d*$/,
    // 只能有英文字母
    enOnly: /^[A-Za-z]+$/,
    // 只有英文字母或下划线
    enUnderline: /^[A-Za-z_]+$/,
    // 只有英文或数字
    enNumber: /^[A-Za-z0-9]+$/,
    // 只有中文字符
    chOnly: /^[\u4e00-\u9fa5]+$/,
    // 含有中文字符
    hasCh: /[\u4e00-\u9fa5]+/,
    // 校验20位国标编码
    gb: /^[0-9]{20}$/,
    // 只允许输入汉字，英文，数字，下划线，短线
    chEnNumDash: /^[\u4e00-\u9fa5A-Za-z0-9_\-]+$/,
    // 日期格式
    date:  /^(\d{4})[-\/](\d{1}|0\d{1}|1[0-2])([-\/](\d{1}|0\d{1}|[1-2][0-9]|3[0-1]))*$/,

    // 校验两位正整数
    twoDigit: /^(([1-9]\d)|(0[1-9]))$/,
    // 校验经度
    longitude: /^[+-]?(((1[0-7][0-9]|[1-9]?[0-9])(\.\d{1,6})?)|(180(\.0{1,6})?))$/,
    // 校验维度
    latitude: /^[+-]?((([1-8]?[0-9])(\.\d{1,6})?)|(90(\.0{1,6})?))$/,
    // 必填项不能为空
    required: /[\S]+/,
    // 只能是数字
    number: /^\d+$/,

    // 国际标准的银行卡号（储蓄卡和信用卡），注意：不包括各个银行的企业账户
    backCard: /^([45][0-9]{11,15}|62[0-9]{14,17})$/,


}

export function isValidate(value, reg) {
    const exp = regexp[reg] || reg;

    return exp.test(value);
}

export function isBackCard(value) {
    return regexp.backCard.test(value);
}